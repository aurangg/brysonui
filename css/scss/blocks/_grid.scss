.sales-table {
  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
      background: none;
    }
    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid $grey;
      position: relative;
      padding-left: 40%;
      display: flex;
      align-items: center;
      text-overflow: ellipsis;
      &:first-of-type {
        display: none !important;
      }
    }
    .sales-attachment {
      width: 162px;
      font-size: 12px;
      line-height: 20px;
    }
    .sales-user:hover {
      left: 0;
    }
    .sales-user2 {
      left: 45%;
      &:hover {
        left: 45%;
      }
    }
    .sales-user3 {
      left: 50%;
      &:hover {
        left: 50%;
      }
    }
    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      font-size: 13px;
      line-height: 16px;
      letter-spacing: -0.5px;
      font-weight: 600 !important;
    }
    /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */
    td:nth-of-type(2):before {
      content: "Quartal";
    }
    td:nth-of-type(3):before {
      content: "Category";
    }
    td:nth-of-type(4):before {
      content: "Reports";
    }
    td:nth-of-type(5):before {
      content: "Sales";
    }
    td:nth-of-type(6):before {
      content: "Details";
    }
  }
}

.table-block {
  .table {
    /*
    Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
    */
    @media only screen and (max-width: 760px),
      (min-device-width: 768px) and (max-device-width: 1024px) {
      /* Force table to not be like tables anymore */
      table,
      thead,
      tbody,
      th,
      td,
      tr {
        display: block;
      }

      thead {
        display: none;
      }
      /* Hide table headers (but not display: none;, for accessibility) */
      thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
      }

      tr {
        margin: 0 0 1rem 0;
      }

      tr:nth-child(odd) {
        background: none;
        box-shadow: none;
        border-radius: 0px;
      }
      td {
        /* Behave  like a "row" */
        border: none;
        border-bottom: 1px solid $grey;
        position: relative;
        padding-left: 40%;
        display: flex;
        align-items: center;
        text-overflow: ellipsis;
        width: 100%;
        padding-right: 20px;
        &:nth-of-type(2) {
          flex-direction: column;
          justify-content: space-evenly;
          .table__progress {
            width: 100%;
            margin: 0 !important;
          }
        }
      }

      td:before {
        /* Now like a table header */
        position: absolute;
        /* Top/left values mimic padding */
        top: 50%;
        transform: translateY(-50%);
        left: 20px;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
        font-size: 13px;
        line-height: 16px;
        letter-spacing: -0.5px;
        font-weight: 600 !important;
      }
      .table__input {
        margin: 0;
        .form-control {
          margin-right: 0 !important;
        }
      }
      /*
    Label the data
    You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
    */
      td:first-of-type:before {
        content: "Name";
      }
      td:nth-of-type(2):before {
        content: "Progress";
      }
      td:nth-of-type(3):before {
        content: "Company";
      }
      td:nth-of-type(4):before {
        content: "Ratings";
      }
      td:nth-of-type(5):before {
        content: "Note";
      }
      td:nth-of-type(6):before {
        content: "Actions";
      }
    }
  }
}

.trader__table {
  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
      background: transparent;
    }
    tbody {
      border-top: none !important;
      border-bottom: none !important;
      tr {
        border-bottom: none !important;
        td {
          box-shadow: none;
        }
      }
    }
    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid $grey;
      position: relative;
      padding-left: 40%;
      display: flex;
      align-items: center;
      text-overflow: ellipsis;
      width: 100%;
      padding-right: 20px;
      &:first-of-type {
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
      }
      &:last-of-type {
        text-align-last: left;
        .price__switcher {
          justify-content: flex-start !important;
        }
      }
    }

    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      font-size: 13px;
      line-height: 16px;
      letter-spacing: -0.5px;
      font-weight: 600 !important;
    }

    /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */
    td:nth-of-type(1):before {
      content: "Company address";
    }
    td:nth-of-type(2):before {
      content: "Trends";
    }
    td:nth-of-type(3):before {
      content: "Notification";
    }
  }
}

.refferal__table {
  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
      background: transparent;
    }
    tbody {
      border-top: none !important;
      border-bottom: none !important;
      tr {
        border-bottom: none !important;
        td {
          box-shadow: none;
        }
      }
    }
    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid $grey;
      position: relative;
      padding-left: 40%;
      display: flex;
      align-items: center;
      text-overflow: ellipsis;
      width: 100%;
      padding-right: 20px;
      &:first-of-type {
        flex-direction: column;
        align-items: flex-start;
        justify-content: center;
      }
      &:nth-of-type(4) {
        justify-content: space-between;
        .progress {
          margin: 0;
          width: 75%;
        }
      }
      &:last-of-type {
        padding-right: 0;
        border-bottom: 0;
      }
    }

    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      font-size: 13px;
      line-height: 16px;
      letter-spacing: -0.5px;
      font-weight: 600 !important;
    }

    /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */
    td:nth-of-type(1):before {
      content: "Income";
    }
    td:nth-of-type(2):before {
      content: "Permissions";
    }
    td:nth-of-type(3):before {
      content: "UTM Sources";
    }
    td:nth-of-type(4):before {
      content: "Header title";
    }
    td:nth-of-type(5):before {
      content: "";
    }
  }
}

.table-one {
  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
      background: transparent;
      border-radius: 6px;
    }
    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid $grey;
      position: relative;
      padding-left: 40%;
      display: flex;
      align-items: center;
      text-overflow: ellipsis;
      &:first-of-type {
        display: none !important;
      }
    }
    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      font-size: 13px;
      line-height: 16px;
      letter-spacing: -0.5px;
      font-weight: 600 !important;
    }
    /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */

    td:nth-of-type(2):before {
      content: "Header title";
    }
    td:nth-of-type(3):before {
      content: "Header title";
    }
    td:nth-of-type(4):before {
      content: "Header title";
    }
    td:nth-of-type(5):before {
      content: "Header title";
    }
    td:nth-of-type(6):before {
      content: "Header title";
    }
  }
}
.table-two {
  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
      background: transparent;
      border-radius: 6px;
    }
    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid $grey;
      position: relative;
      padding-left: 40%;
      display: flex;
      align-items: center;
      text-overflow: ellipsis;
      &:first-of-type {
        display: flex !important;
      }
    }
    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      font-size: 13px;
      line-height: 16px;
      letter-spacing: -0.5px;
      font-weight: 600 !important;
    }
    /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */

    td:nth-of-type(1):before {
      content: "Header title";
    }
    td:nth-of-type(2):before {
      content: "Header title";
    }
    td:nth-of-type(3):before {
      content: "Header title";
    }
    td:nth-of-type(4):before {
      content: "Header title";
    }
    td:nth-of-type(5):before {
      content: "Header title";
    }
    td:nth-of-type(6):before {
      content: "Header title";
    }
  }
}
.table-three {
  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
      background: transparent;
      border-radius: 6px;
    }
    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid $grey;
      position: relative;
      padding-left: 40%;
      display: flex;
      align-items: center;
      text-overflow: ellipsis;
      &:first-of-type {
        display: flex !important;
      }
    }
    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      font-size: 13px;
      line-height: 16px;
      letter-spacing: -0.5px;
      font-weight: 600 !important;
    }
    /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */

    td:nth-of-type(1):before {
      content: "Header title";
    }
    td:nth-of-type(2):before {
      content: "Header title";
    }
    td:nth-of-type(3):before {
      content: "Header title";
    }
    td:nth-of-type(4):before {
      content: "Header title";
    }
    td:nth-of-type(5):before {
      content: "Header title";
    }
    td:nth-of-type(6):before {
      content: "Header title";
    }
  }
}

.table-five {
  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
      background: transparent;
    }
    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid $grey;
      position: relative;
      padding-left: 0%;
      display: flex;
      align-items: center;
      text-overflow: ellipsis;
      width: 100%;
      &:first-of-type {
        display: flex !important;
      }
    }
    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      font-size: 13px;
      line-height: 16px;
      letter-spacing: -0.5px;
      font-weight: 600 !important;
    }
    /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */

    td:nth-of-type(1):before {
      content: "";
    }
    td:nth-of-type(2):before {
      content: "";
    }
    td:nth-of-type(3):before {
      content: "";
    }
    td:nth-of-type(4):before {
      content: "";
    }
    td:nth-of-type(5):before {
      content: "";
    }
    td:nth-of-type(6):before {
      content: "";
    }
  }
}

.table-six {
  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
      background: transparent;
      border-radius: 0px;
    }
    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid $grey;
      position: relative;
      padding-left: 0%;
      display: flex;
      align-items: center;
      text-overflow: ellipsis;
      width: auto;
      &:first-of-type {
        display: flex !important;
      }
    }
    .table-six__progress {
      flex-direction: column;
      justify-content: space-evenly;
      .progress {
        width: 100%;
      }
    }
    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      font-size: 13px;
      line-height: 16px;
      letter-spacing: -0.5px;
      font-weight: 600 !important;
    }
    /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */

    td:nth-of-type(1):before {
      content: "";
    }
    td:nth-of-type(2):before {
      content: "";
    }
    td:nth-of-type(3):before {
      content: "";
    }
    td:nth-of-type(4):before {
      content: "";
    }
    td:nth-of-type(5):before {
      content: "";
    }
    td:nth-of-type(6):before {
      content: "";
    }
  }
}

.table-seven {
  /*
	Max width before this PARTICULAR table gets nasty. This query will take effect for any screen smaller than 760px and also iPads specifically.
	*/
  @media only screen and (max-width: 760px),
    (min-device-width: 768px) and (max-device-width: 1024px) {
    /* Force table to not be like tables anymore */
    table,
    thead,
    tbody,
    th,
    td,
    tr {
      display: block;
    }

    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
      position: absolute;
      top: -9999px;
      left: -9999px;
    }

    tr {
      margin: 0 0 1rem 0;
    }

    tr:nth-child(odd) {
      background: transparent;
      border-radius: 0px;
    }
    td {
      /* Behave  like a "row" */
      border: none;
      border-bottom: 1px solid $grey;
      position: relative;
      padding-left: 0%;
      display: flex;
      align-items: center;
      text-overflow: ellipsis;
      width: 100%;
      &:first-of-type {
        display: flex !important;
      }
    }
    td:before {
      /* Now like a table header */
      position: absolute;
      /* Top/left values mimic padding */
      top: 50%;
      transform: translateY(-50%);
      left: 20px;
      width: 45%;
      padding-right: 10px;
      white-space: nowrap;
      font-size: 13px;
      line-height: 16px;
      letter-spacing: -0.5px;
      font-weight: 600 !important;
    }
    /*
  Label the data
  You could also use a data-* attribute and content for this. That way "bloats" the HTML, this way means you need to keep HTML and CSS in sync. Lea Verou has a clever way to handle with text-shadow.
  */

    td:nth-of-type(1):before {
      content: "";
    }
    td:nth-of-type(2):before {
      content: "";
    }
    td:nth-of-type(3):before {
      content: "";
    }
    td:nth-of-type(4):before {
      content: "";
    }
    td:nth-of-type(5):before {
      content: "";
    }
    td:nth-of-type(6):before {
      content: "";
    }
  }
}
